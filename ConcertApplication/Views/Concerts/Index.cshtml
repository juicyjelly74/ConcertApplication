@using ConcertApplication.Models
@model ConcertApplication.ViewModels.Pagination.ConcertsPaginationViewModel
@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Index";
}

<h2>All concerts</h2>
<div>
    <div class="concerts-table ver2">
        <div>
            <table class="concerts">
                <thead class="concerts-table-head">
                    <tr>
                        <th class="column1">
                            @Html.DisplayNameFor(model => model.modelForHeader.Id)
                        </th>
                        <th class="column2">
                            @Html.DisplayNameFor(model => model.modelForHeader.Type)
                        </th>
                        <th class="column3">
                            @Html.DisplayNameFor(model => model.modelForHeader.Name)
                        </th>
                        <th class="column4">
                            @Html.DisplayNameFor(model => model.modelForHeader.Performer)
                        </th>
                        <th class="column5">
                            @Html.DisplayNameFor(model => model.modelForHeader.TicketsAmount)
                        </th>
                        <th class="column6">
                            @Html.DisplayNameFor(model => model.modelForHeader.TicketsLeft)
                        </th>
                        <th class="column7">
                            @Html.DisplayNameFor(model => model.modelForHeader.Date)
                        </th>
                        <th class="column8">
                            @Html.DisplayNameFor(model => model.modelForHeader.Place)
                        </th>
                        <th class="column9">
                            @Html.DisplayNameFor(model => model.modelForHeader.Price)
                        </th>
                        <th>Actions</th>
                    </tr>
                </thead>

                <tbody class="concerts-table-body">
                    @foreach (var item in Model.ConcertModels)
                    {
                        <tr>
                            <td class="column1">
                                @Html.DisplayFor(modelItem => item.Id).
                            </td>
                            <td class="column2">
                                @Html.DisplayFor(modelItem => item.Type)
                            </td>
                            <td class="column3">
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td class="column4">
                                @Html.DisplayFor(modelItem => item.Performer)
                            </td>
                            <td class="column5">
                                @Html.DisplayFor(modelItem => item.TicketsAmount)
                            </td>
                            <td class="column6">
                                @Html.DisplayFor(modelItem => item.TicketsLeft)
                            </td>
                            <td class="column7">
                                @Html.DisplayFor(modelItem => item.Date)
                            </td>
                            <td class="column8">
                                @Html.DisplayFor(modelItem => item.Place)
                            </td>
                            <td class="column9">
                                @Html.DisplayFor(modelItem => item.Price)
                            </td>
                            <td class="column10">
                                @Html.ActionLink("Details", "Details", new { id = item.Id, page = ViewBag.Page })
                                @if (SignInManager.IsSignedIn(User))
                                {
                                    @if (User.IsInRole("Admin"))
                                    {
                                        @Html.Raw(" | ")
                                        @Html.ActionLink("Edit", "Edit", new { id = item.Id, page = ViewBag.Page })
                                        @Html.Raw(" | ")
                                        @Html.ActionLink("Delete", "Delete", new { id = item.Id, page = ViewBag.Page })
                                    }
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<br />
@if (Model.PageViewModel.HasNextPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
       class="button btn-default btn pull-right">
        Вперед
        <i class="glyphicon glyphicon-chevron-right"></i>
    </a>
}
@for (var i = Model.PageViewModel.TotalPages; i > 0; i--)
{
    <a asp-action="Index"
       asp-route-page="@i"
       class="button btn-default btn pull-right @(Model.PageViewModel.PageNumber == i ? "disabled" : "")">
        @i
    </a>
}
@if (Model.PageViewModel.HasPreviousPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
       class="button btn-default btn pull-right">
        <i class="glyphicon glyphicon-chevron-left"></i>
        Назад
    </a>
}
<br />
<div id="concert_map_app">
    <concert-map></concert-map>
</div>

<template id="concert_map_template">
    <div id="concert-map" style="width:1140px;height:500px;border-radius: 5px;">
    </div>
</template>


<script src="~/js/vue_map.js" asp-append-version="true"></script>
<link rel="stylesheet" href="~/css/table_styles.css" asp-append-version="true" />

